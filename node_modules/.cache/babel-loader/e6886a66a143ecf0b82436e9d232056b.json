{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\OneDrive\\\\Documents\\\\CompSci\\\\Projects\\\\Gantt\\\\Gantt\\\\src\\\\features\\\\table\\\\TaskInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectedTaskTable, renameTask, descTask, themesTable, themeTask, startDateTask, endDateTask } from './TableSlice';\nimport styles from './Table.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DayJsUtils from '@date-io/dayjs';\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport function TaskInfo() {\n  _s();\n\n  const dispatch = useDispatch();\n  const selectedTask = useSelector(selectedTaskTable);\n  const themes = useSelector(themesTable);\n  const classes = useStyles();\n\n  const handleName = event => {\n    dispatch(renameTask({\n      name: event.target.value\n    }));\n  };\n\n  const handleDesc = event => {\n    dispatch(descTask({\n      desc: event.target.value\n    }));\n  };\n\n  const handleThemeChange = event => {\n    dispatch(themeTask({\n      theme: event.target.value\n    }));\n  };\n\n  const handleStartDate = startDate => {\n    dispatch(startDateTask({\n      startDate: startDate\n    }));\n  };\n\n  const handleEndDate = endDate => {\n    dispatch(endDateTask({\n      endDate: endDate\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.taskInfoContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [selectedTask.selected && /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"TaskName\",\n          label: \"Task Name\",\n          value: selectedTask.name,\n          defaultValue: selectedTask.name,\n          onChange: handleName,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this), !selectedTask.selected && /*#__PURE__*/_jsxDEV(TextField, {\n          disabled: true,\n          id: \"TaskName\",\n          label: \"No Task Selected\",\n          value: selectedTask.name,\n          defaultValue: selectedTask.name,\n          onChange: handleName,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [selectedTask.selected && /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"TaskDesc\",\n          label: \"Task Description\",\n          multiline: true,\n          rows: 4,\n          rowsMax: 4,\n          value: selectedTask.desc,\n          onChange: handleDesc,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 43\n        }, this), !selectedTask.selected && /*#__PURE__*/_jsxDEV(TextField, {\n          disabled: true,\n          id: \"TaskDesc\",\n          label: \"No Task Selected\",\n          multiline: true,\n          rows: 4,\n          rowsMax: 4,\n          value: selectedTask.desc,\n          onChange: handleDesc,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: selectedTask.selected && /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-dialog-select-label\",\n            children: \"Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-dialog-select-label\",\n            id: \"demo-dialog-select\",\n            value: selectedTask.theme,\n            onChange: handleThemeChange,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 24\n            }, this),\n            children: themes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.title,\n              children: [option.title, /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                style: {\n                  fill: option.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: selectedTask.selected && /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DayJsUtils,\n          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            label: \"Start Date\",\n            maxDate: selectedTask.endDate,\n            value: selectedTask.startDate,\n            onChange: handleStartDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            label: \"End Date\",\n            minDate: selectedTask.startDate,\n            value: selectedTask.endDate,\n            onChange: handleEndDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskInfo, \"2ntp57+utKRRffKpropbrfhhGwQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useStyles];\n});\n\n_c = TaskInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInfo\");","map":{"version":3,"sources":["C:/Users/adamm/OneDrive/Documents/CompSci/Projects/Gantt/Gantt/src/features/table/TaskInfo.js"],"names":["React","useState","useDispatch","useSelector","selectedTaskTable","renameTask","descTask","themesTable","themeTask","startDateTask","endDateTask","styles","TextField","makeStyles","Grid","FiberManualRecordIcon","InputLabel","Input","MenuItem","FormControl","Select","MuiPickersUtilsProvider","DayJsUtils","DatePicker","KeyboardDatePicker","useStyles","theme","root","margin","spacing","width","TaskInfo","dispatch","selectedTask","themes","classes","handleName","event","name","target","value","handleDesc","desc","handleThemeChange","handleStartDate","startDate","handleEndDate","endDate","taskInfoContainer","selected","formControl","map","option","title","fill","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,iBADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,WAJJ,EAKIC,SALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQO,cARP;AASA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,sBAA/C;;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AAD+B,CAAZ,CAAD,CAA5B;AASA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAMC,QAAQ,GAAG9B,WAAW,EAA5B;AACA,QAAM+B,YAAY,GAAG9B,WAAW,CAACC,iBAAD,CAAhC;AACA,QAAM8B,MAAM,GAAG/B,WAAW,CAACI,WAAD,CAA1B;AACA,QAAM4B,OAAO,GAAGV,SAAS,EAAzB;;AAEA,QAAMW,UAAU,GAAIC,KAAD,IAAW;AAC1BL,IAAAA,QAAQ,CAAC3B,UAAU,CAAC;AAACiC,MAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAD,CAAX,CAAR;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIJ,KAAD,IAAW;AAC1BL,IAAAA,QAAQ,CAAC1B,QAAQ,CAAC;AAACoC,MAAAA,IAAI,EAAEL,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAD,CAAT,CAAR;AACH,GAFD;;AAGA,QAAMG,iBAAiB,GAAIN,KAAD,IAAW;AACjCL,IAAAA,QAAQ,CAACxB,SAAS,CAAC;AAACkB,MAAAA,KAAK,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAD,CAAV,CAAR;AACH,GAFD;;AAGA,QAAMI,eAAe,GAAIC,SAAD,IAAe;AACnCb,IAAAA,QAAQ,CAACvB,aAAa,CAAC;AAACoC,MAAAA,SAAS,EAAEA;AAAZ,KAAD,CAAd,CAAR;AACH,GAFD;;AAGA,QAAMC,aAAa,GAAIC,OAAD,IAAa;AAC/Bf,IAAAA,QAAQ,CAACtB,WAAW,CAAC;AAACqC,MAAAA,OAAO,EAAEA;AAAV,KAAD,CAAZ,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEpC,MAAM,CAACqC,iBAAvB;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,mBACKf,YAAY,CAACgB,QAAb,iBAAyB,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,UAAd;AAAyB,UAAA,KAAK,EAAC,WAA/B;AAA2C,UAAA,KAAK,EAAEhB,YAAY,CAACK,IAA/D;AAAqE,UAAA,YAAY,EAAEL,YAAY,CAACK,IAAhG;AAAsG,UAAA,QAAQ,EAAEF,UAAhH;AAA4H,UAAA,OAAO,EAAC;AAApI;AAAA;AAAA;AAAA;AAAA,gBAD9B,EAEK,CAACH,YAAY,CAACgB,QAAd,iBAA0B,QAAC,SAAD;AAAW,UAAA,QAAQ,MAAnB;AAAoB,UAAA,EAAE,EAAC,UAAvB;AAAkC,UAAA,KAAK,EAAC,kBAAxC;AAA2D,UAAA,KAAK,EAAEhB,YAAY,CAACK,IAA/E;AAAqF,UAAA,YAAY,EAAEL,YAAY,CAACK,IAAhH;AAAsH,UAAA,QAAQ,EAAEF,UAAhI;AAA4I,UAAA,OAAO,EAAC;AAApJ;AAAA;AAAA;AAAA;AAAA,gBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,mBACKH,YAAY,CAACgB,QAAb,iBAAyB,QAAC,SAAD;AAC1B,UAAA,EAAE,EAAC,UADuB;AAE1B,UAAA,KAAK,EAAC,kBAFoB;AAG1B,UAAA,SAAS,MAHiB;AAI1B,UAAA,IAAI,EAAE,CAJoB;AAK1B,UAAA,OAAO,EAAE,CALiB;AAM1B,UAAA,KAAK,EAAEhB,YAAY,CAACS,IANM;AAO1B,UAAA,QAAQ,EAAED,UAPgB;AAQ1B,UAAA,OAAO,EAAC;AARkB;AAAA;AAAA;AAAA;AAAA,gBAD9B,EAWK,CAACR,YAAY,CAACgB,QAAd,iBAA0B,QAAC,SAAD;AACvB,UAAA,QAAQ,MADe;AAE3B,UAAA,EAAE,EAAC,UAFwB;AAG3B,UAAA,KAAK,EAAC,kBAHqB;AAI3B,UAAA,SAAS,MAJkB;AAK3B,UAAA,IAAI,EAAE,CALqB;AAM3B,UAAA,OAAO,EAAE,CANkB;AAO3B,UAAA,KAAK,EAAEhB,YAAY,CAACS,IAPO;AAQ3B,UAAA,QAAQ,EAAED,UARiB;AAS3B,UAAA,OAAO,EAAC;AATmB;AAAA;AAAA;AAAA;AAAA,gBAX/B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eA4BI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACCR,YAAY,CAACgB,QAAb,iBAAyB,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEd,OAAO,CAACe,WAAhC;AAAA,kCACxB,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADwB,eAExB,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,0BADV;AAEE,YAAA,EAAE,EAAC,oBAFL;AAGE,YAAA,KAAK,EAAEjB,YAAY,CAACP,KAHtB;AAIE,YAAA,QAAQ,EAAEiB,iBAJZ;AAKE,YAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBALT;AAAA,sBAOGT,MAAM,CAACiB,GAAP,CAAYC,MAAD,iBACR,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,MAAM,CAACC,KAAxB;AAAA,yBAAgCD,MAAM,CAACC,KAAvC,eAA6C,QAAC,qBAAD;AAAuB,gBAAA,KAAK,EAAE;AAACC,kBAAAA,IAAI,EAAEF,MAAM,CAACG;AAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH;AAPH;AAAA;AAAA;AAAA;AAAA,kBAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAD1B;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA4CI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACCtB,YAAY,CAACgB,QAAb,iBAAyB,QAAC,uBAAD;AAAyB,UAAA,KAAK,EAAE3B,UAAhC;AAAA,kCAC1B,QAAC,UAAD;AACI,YAAA,cAAc,MADlB;AAEI,YAAA,OAAO,EAAC,QAFZ;AAGI,YAAA,KAAK,EAAC,YAHV;AAII,YAAA,OAAO,EAAEW,YAAY,CAACc,OAJ1B;AAKI,YAAA,KAAK,EAAEd,YAAY,CAACY,SALxB;AAMI,YAAA,QAAQ,EAAED;AANd;AAAA;AAAA;AAAA;AAAA,kBAD0B,eAS1B,QAAC,UAAD;AACI,YAAA,cAAc,MADlB;AAEI,YAAA,OAAO,EAAC,QAFZ;AAGI,YAAA,KAAK,EAAC,UAHV;AAII,YAAA,OAAO,EAAEX,YAAY,CAACY,SAJ1B;AAKI,YAAA,KAAK,EAAEZ,YAAY,CAACc,OALxB;AAMI,YAAA,QAAQ,EAAED;AANd;AAAA;AAAA;AAAA;AAAA,kBAT0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAD1B;AAAA;AAAA;AAAA;AAAA,cA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqEH;;GA3Fef,Q;UACK7B,W,EACIC,W,EACNA,W,EACCsB,S;;;KAJJM,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    selectedTaskTable,\r\n    renameTask,\r\n    descTask,\r\n    themesTable,\r\n    themeTask,\r\n    startDateTask,\r\n    endDateTask\r\n} from './TableSlice';\r\nimport styles from './Table.module.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DayJsUtils from '@date-io/dayjs';\r\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\nexport function TaskInfo() {\r\n    const dispatch = useDispatch();\r\n    const selectedTask = useSelector(selectedTaskTable);\r\n    const themes = useSelector(themesTable);\r\n    const classes = useStyles();\r\n\r\n    const handleName = (event) => {\r\n        dispatch(renameTask({name: event.target.value}))\r\n    };\r\n    const handleDesc = (event) => {\r\n        dispatch(descTask({desc: event.target.value}))\r\n    };\r\n    const handleThemeChange = (event) => {\r\n        dispatch(themeTask({theme: event.target.value}))\r\n    };\r\n    const handleStartDate = (startDate) => {\r\n        dispatch(startDateTask({startDate: startDate}))\r\n    }\r\n    const handleEndDate = (endDate) => {\r\n        dispatch(endDateTask({endDate: endDate}))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.taskInfoContainer}>\r\n        <Grid container spacing={0}>\r\n            <Grid item xs={3}>\r\n                {selectedTask.selected && <TextField id=\"TaskName\" label=\"Task Name\" value={selectedTask.name} defaultValue={selectedTask.name} onChange={handleName} variant=\"outlined\"/>}\r\n                {!selectedTask.selected && <TextField disabled id=\"TaskName\" label=\"No Task Selected\" value={selectedTask.name} defaultValue={selectedTask.name} onChange={handleName} variant=\"outlined\"/>}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                {selectedTask.selected && <TextField\r\n                id=\"TaskDesc\"\r\n                label=\"Task Description\"\r\n                multiline\r\n                rows={4}\r\n                rowsMax={4}\r\n                value={selectedTask.desc}\r\n                onChange={handleDesc}\r\n                variant=\"outlined\"\r\n                />}\r\n                {!selectedTask.selected && <TextField\r\n                    disabled\r\n                id=\"TaskDesc\"\r\n                label=\"No Task Selected\"\r\n                multiline\r\n                rows={4}\r\n                rowsMax={4}\r\n                value={selectedTask.desc}\r\n                onChange={handleDesc}\r\n                variant=\"outlined\"\r\n                />}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n            {selectedTask.selected && <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-dialog-select-label\">Theme</InputLabel>\r\n              <Select\r\n                labelId=\"demo-dialog-select-label\"\r\n                id=\"demo-dialog-select\"\r\n                value={selectedTask.theme}\r\n                onChange={handleThemeChange}\r\n                input={<Input />}\r\n              >\r\n                {themes.map((option) => (\r\n                    <MenuItem value={option.title}>{option.title}<FiberManualRecordIcon style={{fill: option.color}}/></MenuItem>\r\n                ))}\r\n              </Select>\r\n              </FormControl>}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n            {selectedTask.selected && <MuiPickersUtilsProvider utils={DayJsUtils}>\r\n            <DatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                label=\"Start Date\"\r\n                maxDate={selectedTask.endDate}\r\n                value={selectedTask.startDate}\r\n                onChange={handleStartDate}\r\n            />\r\n            <DatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                label=\"End Date\"\r\n                minDate={selectedTask.startDate}\r\n                value={selectedTask.endDate}\r\n                onChange={handleEndDate}\r\n            />\r\n            </MuiPickersUtilsProvider>}\r\n            </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}