{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\OneDrive\\\\Documents\\\\CompSci\\\\Projects\\\\Gantt\\\\Gantt\\\\src\\\\features\\\\table\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { rowCountTable, currentDayTable, daysTable, tasksTable, createTask } from './TableSlice';\nimport styles from './Table.module.css';\nimport dayjs from 'dayjs';\nimport AddIcon from '@material-ui/icons/Add';\nimport Zoom from '@material-ui/core/Zoom';\nimport { Task } from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkWeekend = (date, currentDay) => {\n  if (dayjs(date).isSame(currentDay)) {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      className: styles.today //  key={date}\n      ,\n      children: date.format(\"D\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else if (date.format(\"d\") == 0 || date.format(\"d\") == 6) {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      className: styles.weekend //  key={date}\n      ,\n      children: date.format(\"D\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      className: styles.weekday,\n      children: date.format(\"D\")\n    }, date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst checkMonth = date => {\n  if (dayjs(date).format(\"D\") == 1) {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      className: styles.month //  key={date} \n      ,\n      colSpan: date.daysInMonth(),\n      children: date.format(\"MMMM YYYY\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return;\n  }\n};\n\nexport function Table() {\n  _s();\n\n  const dispatch = useDispatch();\n  const count = useSelector(rowCountTable);\n  const currentDay = useSelector(currentDayTable);\n  const days = useSelector(daysTable);\n  const tasks = useSelector(tasksTable);\n  const [mouseOverCell, setMouseOverCell] = React.useState({\n    date: null,\n    rowNumber: null\n  });\n\n  const handleMouseOver = (date, rowNumber) => {\n    setMouseOverCell({\n      date,\n      rowNumber\n    });\n  };\n\n  const checkRow = (date, index, row) => {\n    if (row % 2 == 0) {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: styles.evenRow // key={date}\n        ,\n        onMouseOver: () => handleMouseOver(date, row),\n        onMouseLeave: () => handleMouseOver(null, null),\n        onClick: () => dispatch(createTask({\n          name: \"\",\n          desc: \"\",\n          index: index,\n          row: row,\n          theme: \"No Theme Selected\",\n          width: 52\n        })),\n        children: [tasks.map(task => task.index.isSame(index, \"day\") && task.row == row && /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          row: row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 67\n        }, this)), /*#__PURE__*/_jsxDEV(Zoom, {\n          in: date == mouseOverCell.date && row == mouseOverCell.rowNumber,\n          ...(mouseOverCell ? {\n            timeout: 800\n          } : {}),\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: styles.oddRow // key={date}\n        ,\n        onMouseOver: () => handleMouseOver(date, row),\n        onMouseLeave: () => handleMouseOver(null, null),\n        onClick: () => dispatch(createTask({\n          name: \"\",\n          desc: \"\",\n          index: index,\n          row: row,\n          theme: \"No Theme Selected\",\n          width: 52\n        })),\n        children: [tasks.map(task => task.index.isSame(index, \"day\") && task.row == row && /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          row: row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 67\n        }, this)), /*#__PURE__*/_jsxDEV(Zoom, {\n          in: date == mouseOverCell.date && row == mouseOverCell.rowNumber,\n          ...(mouseOverCell ? {\n            timeout: 800\n          } : {}),\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainTableContainer,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.mainTable,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: days.map(date => checkMonth(date))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: days.map(date => checkWeekend(date, currentDay))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"ganttBody\",\n        children: [...Array(count)].map((index, row) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: days.map((index, date) => checkRow(date, index, row))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Table, \"as2UxBxp5ftHdoYL0/LtaACj4gc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/adamm/OneDrive/Documents/CompSci/Projects/Gantt/Gantt/src/features/table/Table.js"],"names":["React","useState","useSelector","useDispatch","rowCountTable","currentDayTable","daysTable","tasksTable","createTask","styles","dayjs","AddIcon","Zoom","Task","checkWeekend","date","currentDay","isSame","today","format","weekend","weekday","checkMonth","month","daysInMonth","Table","dispatch","count","days","tasks","mouseOverCell","setMouseOverCell","rowNumber","handleMouseOver","checkRow","index","row","evenRow","name","desc","theme","width","map","task","timeout","oddRow","mainTableContainer","mainTable","color","Array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  rowCountTable,\r\n  currentDayTable,\r\n  daysTable,\r\n  tasksTable,\r\n  createTask\r\n\r\n} from './TableSlice';\r\nimport styles from './Table.module.css';\r\nimport dayjs from 'dayjs';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Task } from './Task';\r\n\r\nconst checkWeekend = (date, currentDay) => {\r\n  if (dayjs(date).isSame(currentDay)) {\r\n    return (\r\n      <th className={styles.today}\r\n      //  key={date}\r\n       >\r\n        {date.format(\"D\")}\r\n      </th>)\r\n  }\r\n  else if (date.format(\"d\") == 0 || date.format(\"d\") == 6) {\r\n    return (\r\n    <th className={styles.weekend}\r\n    //  key={date}\r\n     >\r\n      {date.format(\"D\")}\r\n    </th>)\r\n  }\r\n  else {\r\n    return (\r\n      <th className={styles.weekday} key={date}>\r\n        {date.format(\"D\")}\r\n      </th> )\r\n  }\r\n}\r\n\r\nconst checkMonth = (date) => {\r\n  if(dayjs(date).format(\"D\") == 1) {\r\n    return (\r\n      <th className={styles.month}\r\n      //  key={date} \r\n       colSpan={date.daysInMonth()}>\r\n        {date.format(\"MMMM YYYY\")}\r\n      </th>\r\n    );\r\n  }\r\n  else {\r\n    return;\r\n  }\r\n}\r\n\r\nexport function Table() {\r\n\r\n  const dispatch = useDispatch();\r\n  const count = useSelector(rowCountTable);\r\n  const currentDay = useSelector(currentDayTable);\r\n  const days = useSelector(daysTable);\r\n  const tasks = useSelector(tasksTable);\r\n  const [mouseOverCell, setMouseOverCell] = React.useState({date: null, rowNumber: null});\r\n\r\n  const handleMouseOver = (date, rowNumber) => {\r\n    setMouseOverCell({date, rowNumber});\r\n  };\r\n\r\n  const checkRow = (date, index, row) => {\r\n\r\n    if (row % 2 == 0) {\r\n      return (\r\n        <td className={styles.evenRow} \r\n        // key={date}\r\n        onMouseOver={() => handleMouseOver(date, row)}\r\n        onMouseLeave={() => handleMouseOver(null, null)}\r\n        onClick={() => dispatch(createTask({name: \"\", desc: \"\", index: index, row: row, theme: \"No Theme Selected\", width: 52}))}>\r\n            {tasks.map((task) => (\r\n            task.index.isSame(index, \"day\") && task.row == row && <Task index={index} row={row}/>\r\n              ))}\r\n          <Zoom in={date == mouseOverCell.date && row == mouseOverCell.rowNumber} {...(mouseOverCell ? { timeout: 800 } : {})} mountOnEnter unmountOnExit>\r\n            <AddIcon />\r\n          </Zoom>\r\n        </td>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <td className={styles.oddRow} \r\n        // key={date}\r\n        onMouseOver={() => handleMouseOver(date, row)}\r\n        onMouseLeave={() => handleMouseOver(null, null)}\r\n        onClick={() => dispatch(createTask({name: \"\", desc: \"\", index: index, row: row, theme: \"No Theme Selected\", width: 52}))}>\r\n            {tasks.map((task) => (\r\n            task.index.isSame(index, \"day\") && task.row == row && <Task index={index} row={row}/>\r\n              ))}\r\n          <Zoom in={date == mouseOverCell.date && row == mouseOverCell.rowNumber} {...(mouseOverCell ? { timeout: 800 } : {})} mountOnEnter unmountOnExit>\r\n            <AddIcon />\r\n          </Zoom>\r\n        </td>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className={styles.mainTableContainer}>\r\n      <table className={styles.mainTable}>\r\n        <thead style={{color: \"white\"}}>\r\n            <tr>\r\n          {days.map((date) => (\r\n            checkMonth(date)\r\n          ))}\r\n        </tr>\r\n            <tr>\r\n          {days.map((date) => (\r\n            checkWeekend(date, currentDay)\r\n          ))}\r\n          </tr>\r\n          </thead>\r\n          <tbody className=\"ganttBody\">\r\n            {[...Array(count)].map((index, row) => (\r\n                <tr>\r\n                  {days.map((index, date) => (\r\n                    checkRow(date, index, row)\r\n                  ))}\r\n                </tr>\r\n          ))}\r\n            </tbody>\r\n      </table>\r\n      </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}