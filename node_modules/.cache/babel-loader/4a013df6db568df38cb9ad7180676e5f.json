{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamm\\\\OneDrive\\\\Documents\\\\CompSci\\\\Projects\\\\Gantt\\\\Gantt\\\\src\\\\features\\\\table\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTask, selectedTaskTable, dragTask, resizeTask, tasksTable, themesTable } from './TableSlice';\nimport styles from './Table.module.css';\nimport { Rnd } from \"react-rnd\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Task({\n  index,\n  row\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const tasks = useSelector(tasksTable);\n  const selectedTask = useSelector(selectedTaskTable);\n  const themes = useSelector(themesTable);\n\n  const getTask = () => {\n    const isTask = task => task.index.isSame(index, \"days\") && task.row == row;\n\n    const taskIndex = tasks.findIndex(isTask);\n    let task = tasks[taskIndex];\n\n    if (task == undefined) {\n      console.log(\"Task not found!\", taskIndex);\n    }\n\n    return tasks[taskIndex];\n  };\n\n  const getBorder = () => {\n    if (selectedTask.index == \"\") {\n      return \"\";\n    } else if (selectedTask.index.isSame(index, \"days\") && selectedTask.row == row) {\n      return \"3px solid #23C9FF\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const getColor = theme => {\n    const isTheme = object => theme == object.title;\n\n    const themeIndex = themes.findIndex(isTheme);\n    return themes[themeIndex].color;\n  };\n\n  const displayTaskName = () => {\n    const taskName = getTask().name;\n    const taskWidth = getTask().width;\n    const taskNameSubstring = taskWidth / 53 * 4;\n\n    if (taskName.length > taskNameSubstring) {\n      return taskName.substring(0, taskNameSubstring).concat(\"...\");\n    } else {\n      return taskName;\n    }\n\n    return getTask().name.substring(0, getTask().width / 53 * 4 + 4).concat(\"...\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Rnd, {\n    className: styles.task,\n    style: {\n      border: getBorder(),\n      backgroundColor: getColor(getTask().theme)\n    },\n    onClick: () => dispatch(selectTask({\n      name: getTask().name,\n      desc: getTask().desc,\n      index: index,\n      theme: getTask().theme,\n      width: getTask().width,\n      row: row\n    })),\n    onDragStop: (e, d) => {\n      const currentX = Math.round(d.x / 53);\n      const currentY = Math.round(d.y / 33);\n\n      if (currentX != 0 || currentY != 0) {\n        dispatch(dragTask({\n          index: index,\n          row: row,\n          x: currentX,\n          y: currentY\n        }));\n      }\n    },\n    onResizeStop: (e, direction, ref, delta, position) => {\n      const resizeChange = Math.round(delta.width / 53);\n      dispatch(resizeTask({\n        index: index,\n        row: row,\n        width: ref.offsetWidth,\n        resizeChange: resizeChange,\n        direction: direction\n      }));\n    },\n    bounds: \".ganttBody\",\n    dragGrid: [53, 33],\n    resizeGrid: [53, 33],\n    size: {\n      width: getTask().width,\n      height: 30\n    },\n    enableResizing: {\n      top: false,\n      right: true,\n      bottom: false,\n      left: true,\n      topRight: false,\n      bottomRight: false,\n      bottomLeft: false,\n      topLeft: false\n    },\n    children: displayTaskName()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"wCL2s21ZgLK1XJo77+mUhc1K28c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/adamm/OneDrive/Documents/CompSci/Projects/Gantt/Gantt/src/features/table/Task.js"],"names":["useDispatch","useSelector","selectTask","selectedTaskTable","dragTask","resizeTask","tasksTable","themesTable","styles","Rnd","React","Task","index","row","dispatch","tasks","selectedTask","themes","getTask","isTask","task","isSame","taskIndex","findIndex","undefined","console","log","getBorder","getColor","theme","isTheme","object","title","themeIndex","color","displayTaskName","taskName","name","taskWidth","width","taskNameSubstring","length","substring","concat","border","backgroundColor","desc","e","d","currentX","Math","round","x","currentY","y","direction","ref","delta","position","resizeChange","offsetWidth","height","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    selectTask,\r\n    selectedTaskTable,\r\n    dragTask,\r\n    resizeTask,\r\n    tasksTable,\r\n    themesTable\r\n} from './TableSlice';\r\nimport styles from './Table.module.css';\r\nimport { Rnd } from \"react-rnd\";\r\nimport React from 'react';\r\n\r\nexport function Task({index, row}) {\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(tasksTable);\r\n    const selectedTask = useSelector(selectedTaskTable);\r\n    const themes = useSelector(themesTable);\r\n\r\n    const getTask = () => {\r\n        const isTask = (task) =>  ((task.index).isSame(index, \"days\") && task.row == row);\r\n        const taskIndex = tasks.findIndex(isTask);\r\n        let task = tasks[taskIndex];\r\n        if (task == undefined) {\r\n          console.log(\"Task not found!\", taskIndex);\r\n        }\r\n        return tasks[taskIndex];\r\n    }\r\n\r\n    const getBorder = () => {\r\n        if (selectedTask.index == \"\") {\r\n            return \"\";\r\n        }\r\n        else if ((selectedTask.index).isSame(index, \"days\") && selectedTask.row == row) {\r\n            return \"3px solid #23C9FF\";\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const getColor = (theme) => {\r\n        const isTheme = (object) =>  (theme == object.title);\r\n        const themeIndex = themes.findIndex(isTheme);\r\n        return themes[themeIndex].color;\r\n    }\r\n\r\n    const displayTaskName = () => {\r\n        const taskName = getTask().name;\r\n        const taskWidth = getTask().width;\r\n        const taskNameSubstring = (taskWidth / 53) * 4;\r\n        if (taskName.length > taskNameSubstring) {\r\n            return taskName.substring(0, taskNameSubstring).concat(\"...\");\r\n        }\r\n        else {\r\n            return taskName;\r\n        }\r\n        return getTask().name.substring(0, ((getTask().width / 53) * 4) + 4).concat(\"...\");\r\n    }\r\n\r\n    return (\r\n        <Rnd className={styles.task}\r\n        style={{border: getBorder(), backgroundColor: getColor(getTask().theme)}}\r\n        onClick={() => dispatch(selectTask({name: getTask().name, desc: getTask().desc, index: index, theme: getTask().theme, width: getTask().width, row: row}))}\r\n        onDragStop={(e, d) => {\r\n            const currentX = Math.round(d.x / 53);\r\n            const currentY = Math.round(d.y / 33);\r\n            if (currentX != 0 || currentY != 0) {\r\n                dispatch(dragTask({index: index, row: row, x: currentX, y: currentY}));\r\n            } \r\n        }}\r\n        onResizeStop={(e, direction, ref, delta, position) => {\r\n            const resizeChange = Math.round(delta.width / 53);\r\n            dispatch(resizeTask({index: index, row: row, width: ref.offsetWidth, resizeChange: resizeChange, direction: direction}));\r\n            }}\r\n          bounds=\".ganttBody\"\r\n          dragGrid={[53, 33]}\r\n          resizeGrid={[53, 33]}\r\n          size={{ width: getTask().width , height: 30 }}\r\n          enableResizing={{\r\n            top: false,\r\n            right: true,\r\n            bottom: false,\r\n            left: true,\r\n            topRight: false,\r\n            bottomRight: false,\r\n            bottomLeft: false,\r\n            topLeft: false,\r\n          }}\r\n        >\r\n          {displayTaskName()}  \r\n        </Rnd>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}