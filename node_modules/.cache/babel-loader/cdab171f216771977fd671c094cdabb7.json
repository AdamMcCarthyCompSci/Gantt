{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport dayjs from 'dayjs';\nconst current = dayjs();\nlet firstOfMonth = dayjs(current).subtract(dayjs().format(\"D\") - 1, \"day\");\nlet days = [];\nlet currentMonth = dayjs(firstOfMonth);\nlet daysInCurrentMonth = dayjs(currentMonth).daysInMonth();\n\nfor (let i = 1; i <= daysInCurrentMonth; i++) {\n  days.push(currentMonth);\n  currentMonth = dayjs(currentMonth).add(1, \"day\");\n}\n\nexport const slice = createSlice({\n  name: 'table',\n  initialState: {\n    rowCount: 10,\n    currentDay: dayjs(current),\n    rightMonth: dayjs(firstOfMonth),\n    leftMonth: dayjs(firstOfMonth),\n    firstOfMonth: dayjs(firstOfMonth),\n    monthCount: 0,\n    days: days,\n    tasks: [],\n    selectedTask: {\n      selected: false,\n      name: \"\",\n      desc: \"\",\n      index: dayjs(),\n      theme: \"No Theme Selected\",\n      startDate: dayjs(),\n      endDate: dayjs(),\n      row: \"\"\n    },\n    themes: [{\n      title: \"No Theme Selected\",\n      color: \"#0E5A8A\"\n    }]\n  },\n  reducers: {\n    increment: state => {\n      state.rowCount += 1;\n    },\n    decrement: state => {\n      if (state.rowCount > 0) {\n        state.rowCount -= 1;\n      }\n    },\n    futureMonth: state => {\n      state.monthCount += 1;\n      state.leftMonth = state.leftMonth.add(1, \"month\");\n      let futureMonth = state.leftMonth;\n      console.log(state.leftMonth);\n      let futureMonthDays = [];\n      let daysInFutureMonth = futureMonth.daysInMonth();\n\n      for (let i = 1; i <= daysInFutureMonth; i++) {\n        futureMonthDays.push(futureMonth);\n        futureMonth = futureMonth.add(1, \"day\");\n      }\n\n      state.days = state.days.concat(futureMonthDays);\n    },\n    pastMonth: state => {\n      state.monthCount += 1;\n      state.rightMonth = state.rightMonth.subtract(1, \"month\");\n      let pastMonth = state.rightMonth;\n      let pastMonthDays = [];\n      let daysInPastMonth = pastMonth.daysInMonth();\n\n      for (let i = 1; i <= daysInPastMonth; i++) {\n        pastMonthDays.push(pastMonth);\n        pastMonth = pastMonth.add(1, \"day\");\n      }\n\n      state.days = pastMonthDays.concat(state.days);\n    },\n    createTask: (state, action) => {\n      if (state.tasks.find(task => task.index.isSame(action.payload.index, \"day\") && task.row == action.payload.row)) {\n        console.log(\"Task already exists in this cell!\");\n      } else {\n        console.log(action.payload);\n        state.tasks.push(action.payload);\n      }\n    },\n    dragTask: (state, action) => {\n      const isTask = task => task.index.isSame(action.payload.index, \"day\") && task.row == action.payload.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      let task = state.tasks[taskIndex];\n\n      if (task == undefined) {\n        console.log(\"Task not found!\", taskIndex);\n      }\n\n      if (action.payload.x > 0) {\n        state.tasks[taskIndex].index = dayjs(task.index).add(Math.abs(action.payload.x), \"day\");\n      } else if (action.payload.x < 0) {\n        state.tasks[taskIndex].index = dayjs(task.index).subtract(Math.abs(action.payload.x), \"day\");\n      }\n\n      if (action.payload.y > 0) {\n        task.row += action.payload.y;\n      } else if (action.payload.y < 0) {\n        task.row += action.payload.y;\n      }\n\n      state.tasks[taskIndex].index = task.index;\n      state.tasks[taskIndex].row = task.row;\n      state.selectedTask.index = state.tasks[taskIndex].index;\n      state.selectedTask.startDate = state.tasks[taskIndex].index;\n      state.selectedTask.endDate = state.tasks[taskIndex].index.add(state.tasks[taskIndex].width / 53, \"day\");\n    },\n    resizeTask: (state, action) => {\n      const isTask = task => task.index.isSame(action.payload.index, \"day\") && task.row == action.payload.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      let task = state.tasks[taskIndex];\n\n      if (task == undefined) {\n        console.log(\"Task not found!\", taskIndex);\n      }\n\n      state.tasks[taskIndex].width = action.payload.width;\n      console.log(action.payload.width);\n\n      if (action.payload.direction == \"left\") {\n        state.tasks[taskIndex].index = dayjs(task.index).subtract(action.payload.resizeChange, \"day\");\n      }\n\n      state.selectedTask.width = state.tasks[taskIndex].width;\n      state.selectedTask.index = state.tasks[taskIndex].index;\n      state.selectedTask.startDate = state.tasks[taskIndex].index;\n      state.selectedTask.endDate = state.tasks[taskIndex].index.add(state.tasks[taskIndex].width / 53, \"day\");\n    },\n    selectTask: (state, action) => {\n      if (state.selectedTask.index.isSame(action.payload.index, \"day\") && state.selectedTask.row == action.payload.row) {\n        state.selectedTask = {\n          selected: false,\n          name: \"\",\n          desc: \"\",\n          index: dayjs(),\n          startDate: dayjs(),\n          endDate: dayjs(),\n          theme: \"No Theme Selected\",\n          row: \"\"\n        };\n      } else {\n        console.log(action.payload.width);\n        state.selectedTask = {\n          selected: true,\n          name: action.payload.name,\n          desc: action.payload.desc,\n          index: action.payload.index,\n          theme: action.payload.theme,\n          startDate: dayjs(action.payload.index),\n          endDate: dayjs(action.payload.index).add(action.payload.width / 53, \"day\"),\n          row: action.payload.row\n        };\n      }\n    },\n    renameTask: (state, action) => {\n      state.selectedTask.name = action.payload.name;\n\n      const isTask = task => task.index.isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      state.tasks[taskIndex].name = action.payload.name;\n    },\n    descTask: (state, action) => {\n      state.selectedTask.desc = action.payload.desc;\n\n      const isTask = task => task.index.isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      state.tasks[taskIndex].desc = action.payload.desc;\n    },\n    createTheme: (state, action) => {\n      state.themes.push({\n        title: action.payload.title,\n        color: action.payload.color\n      });\n    },\n    themeTask: (state, action) => {\n      state.selectedTask.theme = action.payload.theme;\n\n      const isTask = task => task.index.isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      state.tasks[taskIndex].theme = action.payload.theme;\n    },\n    startDateTask: (state, action) => {\n      const isTask = task => task.index.isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      state.selectedTask.index = action.payload.startDate;\n      state.selectedTask.startDate = action.payload.startDate;\n      state.tasks[taskIndex].index = action.payload.startDate;\n      const duration = state.selectedTask.index.diff(state.selectedTask.endDate, \"day\");\n      state.selectedTask.width = Math.abs(duration * 53 + 1);\n      state.tasks[taskIndex].width = state.selectedTask.width;\n    },\n    endDateTask: (state, action) => {\n      const isTask = task => task.index.isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row;\n\n      const taskIndex = state.tasks.findIndex(isTask);\n      const duration = state.selectedTask.index.diff(action.payload.endDate, \"day\");\n      state.selectedTask.width = Math.abs(duration * 53 + 1);\n      state.selectedTask.endDate = action.payload.endDate;\n      state.tasks[taskIndex].width = state.selectedTask.width;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  futureMonth,\n  pastMonth,\n  createTask,\n  dragTask,\n  resizeTask,\n  selectTask,\n  renameTask,\n  descTask,\n  createTheme,\n  themeTask,\n  startDateTask,\n  endDateTask\n} = slice.actions;\nexport const rowCountTable = state => state.table.rowCount;\nexport const currentDayTable = state => state.table.currentDay;\nexport const daysTable = state => state.table.days;\nexport const tasksTable = state => state.table.tasks;\nexport const selectedTaskTable = state => state.table.selectedTask;\nexport const themesTable = state => state.table.themes;\nexport default slice.reducer;","map":{"version":3,"sources":["C:/Users/adamm/OneDrive/Documents/CompSci/Projects/Gantt/Gantt/src/features/table/TableSlice.js"],"names":["createSlice","dayjs","current","firstOfMonth","subtract","format","days","currentMonth","daysInCurrentMonth","daysInMonth","i","push","add","slice","name","initialState","rowCount","currentDay","rightMonth","leftMonth","monthCount","tasks","selectedTask","selected","desc","index","theme","startDate","endDate","row","themes","title","color","reducers","increment","state","decrement","futureMonth","console","log","futureMonthDays","daysInFutureMonth","concat","pastMonth","pastMonthDays","daysInPastMonth","createTask","action","find","task","isSame","payload","dragTask","isTask","taskIndex","findIndex","undefined","x","Math","abs","y","width","resizeTask","direction","resizeChange","selectTask","renameTask","descTask","createTheme","themeTask","startDateTask","duration","diff","endDateTask","actions","rowCountTable","table","currentDayTable","daysTable","tasksTable","selectedTaskTable","themesTable","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nconst current = dayjs();\r\nlet firstOfMonth = dayjs(current).subtract(dayjs().format(\"D\") - 1, \"day\");\r\nlet days = []\r\nlet currentMonth = dayjs(firstOfMonth);\r\nlet daysInCurrentMonth = dayjs(currentMonth).daysInMonth();\r\nfor (let i = 1; i <= daysInCurrentMonth; i++) {\r\n  days.push(currentMonth)\r\n  currentMonth = dayjs(currentMonth).add(1, \"day\");\r\n}\r\n\r\nexport const slice = createSlice({\r\n  name: 'table',\r\n  initialState: {\r\n    rowCount: 10,\r\n    currentDay: dayjs(current),\r\n    rightMonth: dayjs(firstOfMonth),\r\n    leftMonth: dayjs(firstOfMonth),\r\n    firstOfMonth: dayjs(firstOfMonth),\r\n    monthCount: 0,\r\n    days: days,\r\n    tasks: [],\r\n    selectedTask: {selected: false, name: \"\", desc: \"\", index: dayjs(), theme: \"No Theme Selected\", startDate: dayjs(), endDate: dayjs(), row: \"\"},\r\n    themes: [{title: \"No Theme Selected\", color: \"#0E5A8A\"}]\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      state.rowCount += 1;\r\n    },\r\n    decrement: state => {\r\n      if (state.rowCount > 0) {\r\n        state.rowCount -= 1;\r\n      }\r\n    },\r\n    futureMonth: state => {\r\n      state.monthCount += 1;\r\n      state.leftMonth = state.leftMonth.add(1, \"month\");\r\n      let futureMonth = state.leftMonth;\r\n      console.log(state.leftMonth);\r\n      let futureMonthDays = []\r\n      let daysInFutureMonth = futureMonth.daysInMonth();\r\n      for (let i = 1; i <= daysInFutureMonth; i++) {\r\n        futureMonthDays.push(futureMonth)\r\n        futureMonth = futureMonth.add(1, \"day\");\r\n      }\r\n      state.days = state.days.concat(futureMonthDays);\r\n    },\r\n    pastMonth: state => {\r\n      state.monthCount += 1\r\n      state.rightMonth = state.rightMonth.subtract(1, \"month\");\r\n      let pastMonth = state.rightMonth;\r\n      let pastMonthDays = []\r\n      let daysInPastMonth = pastMonth.daysInMonth();\r\n      for (let i = 1; i <= daysInPastMonth; i++) {\r\n        pastMonthDays.push(pastMonth)\r\n        pastMonth = pastMonth.add(1, \"day\");\r\n      }\r\n      state.days = pastMonthDays.concat(state.days);\r\n    },\r\n    createTask: (state, action) => {\r\n      if (state.tasks.find(task => (task.index).isSame(action.payload.index, \"day\") && task.row == action.payload.row)) {\r\n        console.log(\"Task already exists in this cell!\");\r\n      }\r\n      else {\r\n        console.log(action.payload);\r\n        state.tasks.push(action.payload);\r\n      }\r\n    },\r\n    dragTask: (state, action) => {\r\n      const isTask = (task) =>  ((task.index).isSame(action.payload.index, \"day\") && task.row == action.payload.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      let task = state.tasks[taskIndex];\r\n      if (task == undefined) {\r\n        console.log(\"Task not found!\", taskIndex);\r\n      }\r\n      if (action.payload.x > 0) {\r\n        state.tasks[taskIndex].index = dayjs(task.index).add(Math.abs(action.payload.x), \"day\");\r\n      }\r\n      else if (action.payload.x < 0) {\r\n        state.tasks[taskIndex].index = dayjs(task.index).subtract(Math.abs(action.payload.x), \"day\");\r\n      }\r\n      if (action.payload.y > 0) {\r\n        task.row += action.payload.y;\r\n      }\r\n      else if (action.payload.y < 0) {\r\n        task.row += action.payload.y;\r\n      }\r\n      state.tasks[taskIndex].index = task.index;\r\n      state.tasks[taskIndex].row = task.row;\r\n      state.selectedTask.index = state.tasks[taskIndex].index;\r\n      state.selectedTask.startDate = state.tasks[taskIndex].index;\r\n      state.selectedTask.endDate = state.tasks[taskIndex].index.add(state.tasks[taskIndex].width / 53, \"day\")\r\n    },\r\n    resizeTask: (state, action) => {\r\n      const isTask = (task) =>  ((task.index).isSame(action.payload.index, \"day\") && task.row == action.payload.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      let task = state.tasks[taskIndex];\r\n      if (task == undefined) {\r\n        console.log(\"Task not found!\", taskIndex);\r\n      }\r\n      state.tasks[taskIndex].width = action.payload.width;\r\n      console.log(action.payload.width)\r\n      if (action.payload.direction == \"left\") {\r\n        state.tasks[taskIndex].index = dayjs(task.index).subtract(action.payload.resizeChange, \"day\");\r\n      }\r\n      state.selectedTask.width = state.tasks[taskIndex].width;\r\n      state.selectedTask.index = state.tasks[taskIndex].index;\r\n      state.selectedTask.startDate = state.tasks[taskIndex].index;\r\n      state.selectedTask.endDate = state.tasks[taskIndex].index.add(state.tasks[taskIndex].width / 53, \"day\")\r\n      \r\n    },\r\n    selectTask: (state, action) => {\r\n      if ((state.selectedTask.index).isSame(action.payload.index, \"day\") && state.selectedTask.row == action.payload.row) {\r\n        state.selectedTask = {selected: false, name: \"\", desc: \"\", index: dayjs(), startDate: dayjs(), endDate: dayjs(), theme: \"No Theme Selected\", row: \"\"}\r\n\r\n      }\r\n      else {\r\n        console.log(action.payload.width);\r\n        state.selectedTask = {selected: true, name: action.payload.name, desc: action.payload.desc, index: action.payload.index, theme: action.payload.theme, startDate: dayjs(action.payload.index), endDate: dayjs(action.payload.index).add(action.payload.width/53, \"day\"), row: action.payload.row};\r\n      }\r\n    },\r\n    renameTask: (state, action) => {\r\n      state.selectedTask.name = action.payload.name;\r\n      const isTask = (task) =>  ((task.index).isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      state.tasks[taskIndex].name = action.payload.name;\r\n    },\r\n    descTask: (state, action) => {\r\n      state.selectedTask.desc = action.payload.desc;\r\n      const isTask = (task) =>  ((task.index).isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      state.tasks[taskIndex].desc = action.payload.desc;\r\n    },\r\n    createTheme: (state, action) => {\r\n      state.themes.push({title: action.payload.title, color: action.payload.color})\r\n    },\r\n    themeTask: (state, action) => {\r\n      state.selectedTask.theme = action.payload.theme;\r\n      const isTask = (task) =>  ((task.index).isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      state.tasks[taskIndex].theme = action.payload.theme;\r\n    },\r\n    startDateTask: (state, action) => {\r\n      const isTask = (task) =>  ((task.index).isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      state.selectedTask.index = action.payload.startDate;\r\n      state.selectedTask.startDate = action.payload.startDate;\r\n      state.tasks[taskIndex].index = action.payload.startDate;\r\n      const duration = state.selectedTask.index.diff(state.selectedTask.endDate, \"day\");\r\n      state.selectedTask.width = Math.abs((duration * 53) + 1);\r\n      state.tasks[taskIndex].width = state.selectedTask.width;\r\n\r\n    },\r\n    endDateTask: (state, action) => {\r\n      const isTask = (task) =>  ((task.index).isSame(state.selectedTask.index, \"day\") && task.row == state.selectedTask.row);\r\n      const taskIndex = state.tasks.findIndex(isTask);\r\n      const duration = state.selectedTask.index.diff(action.payload.endDate, \"day\");\r\n      state.selectedTask.width = Math.abs((duration * 53) + 1);\r\n      state.selectedTask.endDate = action.payload.endDate;\r\n      state.tasks[taskIndex].width = state.selectedTask.width;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, futureMonth, pastMonth, createTask, dragTask, resizeTask, selectTask, renameTask, descTask, createTheme, themeTask, startDateTask, endDateTask } = slice.actions;\r\n\r\nexport const rowCountTable = state => state.table.rowCount;\r\nexport const currentDayTable = state => state.table.currentDay;\r\nexport const daysTable = state => state.table.days;\r\nexport const tasksTable = state => state.table.tasks;\r\nexport const selectedTaskTable = state => state.table.selectedTask;\r\nexport const themesTable = state => state.table.themes;\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}